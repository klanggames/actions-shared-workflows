name: Publish NPM
description: Publishes an NPM package to a registry.
inputs:
  project-path:
    description: The path to the project to publish
    required: true
  output-folder:
    description: The path to the npm output folder.
    default: ${{ github.workspace }}/.npm
    required: false
  tool-version:
    description: Version of unity npm packager tool
    default: 0.1.4
    required: false
  registry:
    description: Target NPM registry
    default: https://npm.pkg.github.com
    required: false
  node-auth-token:
    description: Node authentication token
    default: ${{ github.token }}
    required: false
  tool-token:
    description: github token used to download the unity npm packager tool
    required: true

branding:
  icon: 'upload'  
  color: 'orange'

runs:
  using: composite
  steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Install Unity NPM Packager
      run: |
        gh release download --repo klanggames/tool-unity-npm-packager v${{ inputs.tool-version }} -p '*linux-x64.zip'
        unzip unity-npm-packager-${{ inputs.tool-version }}-linux-x64 -d ./unity-npm-packager
        chmod +x -R ./unity-npm-packager/
      shell: bash
      env:
        # secrets.GITHUB_TOKEN does not give enough permissions to download releases from annother repo. So, we have
        # to use a PAT with sufficient permissions here.
        GITHUB_TOKEN: ${{ inputs.tool-token }}

    - uses: actions/setup-dotnet@v2
      with:
        dotnet-version: 6.0.x

    - name: Install GitVersion
      uses: gittools/actions/gitversion/setup@v0.9.13
      with:
        versionSpec: "5.x"

    - name: Create GitVersion.yml
      run: |
        echo "mode: Mainline" > GitVersion.yml
      shell: bash

    - name: Use GitVersion
      uses: gittools/actions/gitversion/execute@v0.9.13
      id: gitversion

    - run: |
        echo "FullSemVer: ${{ steps.gitversion.outputs.fullSemVer }}"
      shell: bash

    - name: Create Unity NPM Package
      shell: bash
      run: ./unity-npm-packager/bin/linux-x64/Klang.Seed.UnityNpmPackager --sources ${{ inputs.project-path }} ./unitypackagedef --destination ${{ github.workspace }}/.npm

    - uses: actions/setup-node@v3
      with:
        registry-url: "${{ inputs.registry }}"

    - name: NPM Update Version
      working-directory: ${{ github.workspace }}/.npm
      shell: bash
      run: npm version ${{ steps.gitversion.outputs.fullSemVer }}

    - name: NPM Publish
      working-directory: ${{ github.workspace }}/.npm
      run: npm publish
      shell: bash
      env:
        NODE_AUTH_TOKEN: ${{ inputs.node-auth-token }}
