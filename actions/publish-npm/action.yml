name: Publish NPM
description: Publishes an NPM package to a registry.
inputs:
  project-path:
    description: The path to the project to publish
    required: true
  version:
    description: The package version
    required: true
  tool-token:
    description: github token used to download the unity npm packager tool
    required: true
  output-folder:
    description: The path to the npm output folder.
    default: ${{ github.workspace }}/.npm
    required: false
  tool-version:
    description: Version of unity npm packager tool
    default: 0.1.5
    required: false
  registry:
    description: Target NPM registry
    default: https://npm.pkg.github.com
    required: false
  node-auth-token:
    description: Node authentication token
    default: ${{ github.token }}
    required: false
  nuget-auth-token:
    description: NuGet authentication token
    default: ${{ github.token }}
    required: false
  unity-package-def-path:
    description: Default folder for package.json and asmdef
    default: ./unitypackagedef
    required: false

runs:
  using: composite
  steps:
    - uses: marocchino/sticky-pull-request-comment@v2
      with:
        GITHUB_TOKEN: ${{ github.token }}
        header: npm-${{ inputs.project-path }}
        message: |
          ## Publishing NPM Package `${{ inputs.project-path }}` for changes in ${{ github.event.pull_request.head.sha }}
          :warning: being published... please stand by!

    - name: Install Unity NPM Packager
      run: |
        gh release download --repo klanggames/tool-unity-npm-packager v${{ inputs.tool-version }} -p '*linux-x64.zip'
        unzip unity-npm-packager-${{ inputs.tool-version }}-linux-x64 -d ./unity-npm-packager
        chmod +x -R ./unity-npm-packager/
      shell: bash
      env:
        # secrets.GITHUB_TOKEN does not give enough permissions to download releases from annother repo. So, we have
        # to use a PAT with sufficient permissions here.
        GITHUB_TOKEN: ${{ inputs.tool-token }}

    - uses: actions/setup-dotnet@v2
      with:
        dotnet-version: 6.0.x

    - name: Prepare NuGet Source
      run: dotnet nuget add source --username klanggames --password ${{ inputs.nuget-auth-token }} --store-password-in-clear-text --name github "https://nuget.pkg.github.com/klanggames/index.json"
      shell: bash

    - name: Create Unity NPM Package
      shell: bash
      run: ./unity-npm-packager/bin/linux-x64/Klang.Seed.UnityNpmPackager --sources ${{ inputs.project-path }} ${{ inputs.unity-package-def-path }} --destination ${{ github.workspace }}/.npm

    - uses: actions/setup-node@v3
      with:
        registry-url: "${{ inputs.registry }}"
        node-version: 16

    - name: NPM Update Version
      working-directory: ${{ github.workspace }}/.npm
      shell: bash
      run: npm version ${{ inputs.version }}
      continue-on-error: true

    - name: NPM Publish
      working-directory: ${{ github.workspace }}/.npm
      run: npm publish
      shell: bash
      env:
        NODE_AUTH_TOKEN: ${{ inputs.node-auth-token }}

    - name: Inform about success
      if: success()
      shell: bash
      run: |
        echo >>${{ inputs.project-path }}-npm-pr-comment.txt '## Publishing NPM Package `${{ inputs.project-path }}` for changes in ${{ github.event.pull_request.head.sha }}'
        echo >>${{ inputs.project-path }}-npm-pr-comment.txt
        echo >>${{ inputs.project-path }}-npm-pr-comment.txt "### Published Version"
        echo >>${{ inputs.project-path }}-npm-pr-comment.txt
        echo >>${{ inputs.project-path }}-npm-pr-comment.txt '```'
        echo >>${{ inputs.project-path }}-npm-pr-comment.txt "${{ inputs.version }}"
        echo >>${{ inputs.project-path }}-npm-pr-comment.txt '```'
        echo >>${{ inputs.project-path }}-npm-pr-comment.txt ':heavy_check_mark: Success publishing NPM package'
        cat ${{ inputs.project-path }}-npm-pr-comment.txt >>$GITHUB_STEP_SUMMARY

    - name: Inform about failure
      if: failure() || cancelled()
      shell: bash
      run: |
        echo >>${{ inputs.project-path }}-npm-pr-comment.txt '## Publishing NPM Package `${{ inputs.project-path }}` for changes in ${{ github.event.pull_request.head.sha }}'
        echo >>${{ inputs.project-path }}-npm-pr-comment.txt
        echo >>${{ inputs.project-path }}-npm-pr-comment.txt "### Failed Version"
        echo >>${{ inputs.project-path }}-npm-pr-comment.txt
        echo >>${{ inputs.project-path }}-npm-pr-comment.txt '```'
        echo >>${{ inputs.project-path }}-npm-pr-comment.txt "${{ inputs.version }}"
        echo >>${{ inputs.project-path }}-npm-pr-comment.txt '```'
        echo >>${{ inputs.project-path }}-npm-pr-comment.txt ':boom: Publishing NPM package failed. Please see details in Actions output.'
        cat ${{ inputs.project-path }}-npm-pr-comment.txt >>$GITHUB_STEP_SUMMARY

    - uses: marocchino/sticky-pull-request-comment@v2
      if: always()
      with:
        GITHUB_TOKEN: ${{ github.token }}
        header: npm-${{ inputs.project-path }}
        path: ${{ inputs.project-path }}-npm-pr-comment.txt
