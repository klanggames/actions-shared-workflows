name: Publish NuGet
description: Publishes an NuGet package to a registry.
inputs:
  project-path:
    description: The folder of project to publish
    required: true
  token:
    description: NuGet authentication token
    default: ${{ github.token }}
    required: false

runs:
  using: composite
  steps:
    - uses: marocchino/sticky-pull-request-comment@v2
      with:
        GITHUB_TOKEN: ${{ github.token }}
        header: nuget-${{ inputs.project-path }}
        message: |
          ## Publishing NuGet Package `${{ inputs.project-path }}` for changes in ${{ github.event.pull_request.head.sha }}
          :warning: being published... please stand by!

    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - uses: actions/setup-dotnet@v2
      with:
        dotnet-version: 6.0.x

    - name: Prepare NuGet Source
      run: dotnet nuget add source --username klanggames --password ${{ inputs.token }} --store-password-in-clear-text --name github "https://nuget.pkg.github.com/klanggames/index.json"
      shell: bash

    - name: Setup GitVersion
      uses: ./actions/setup-gitversion
      id: gitversion

    - name: Restore
      working-directory: ${{ inputs.project-path }}
      run: dotnet restore
      shell: bash

    - name: Pack
      working-directory: ${{ inputs.project-path }}
      run: dotnet pack --no-restore -c Release --include-symbols -p:Version=${{ steps.gitversion.outputs.fullSemVer }} -p:RepositoryUrl=${{ github.repositoryUrl }} -o ${{ inputs.project-path }}/output
      shell: bash

    - name: NuGet Publish
      working-directory: ${{ inputs.project-path }}
      run: dotnet nuget push ${{ inputs.project-path }}/output/*.nupkg --api-key ${{ github.token }} --source "github" --skip-duplicate
      shell: bash

    - name: Inform about success
      if: success()
      shell: bash
      run: |
        echo >>${{ inputs.project-path }}-nuget-pr-comment.txt '## Publishing NuGet Package `${{ inputs.project-path }}` for changes in ${{ github.event.pull_request.head.sha }}'
        echo >>${{ inputs.project-path }}-nuget-pr-comment.txt
        echo >>${{ inputs.project-path }}-nuget-pr-comment.txt '```'
        echo >>${{ inputs.project-path }}-nuget-pr-comment.txt "Version: ${{ steps.gitversion.outputs.fullSemVer }}"
        echo >>${{ inputs.project-path }}-nuget-pr-comment.txt '```'
        echo >>${{ inputs.project-path }}-nuget-pr-comment.txt ':heavy_check_mark: Success publishing NuGet package'
        cat ${{ inputs.project-path }}-nuget-pr-comment.txt >>$GITHUB_STEP_SUMMARY

    - name: Inform about failure
      if: failure()
      shell: bash
      run: |
        echo >>${{ inputs.project-path }}-nuget-pr-comment.txt '## Publishing NuGet Package `${{ inputs.project-path }}` for changes in ${{ github.event.pull_request.head.sha }}'
        echo >>${{ inputs.project-path }}-nuget-pr-comment.txt
        echo >>${{ inputs.project-path }}-nuget-pr-comment.txt ':boom: Publishing NuGet package failed. Please see details in Actions output.'
        cat ${{ inputs.project-path }}-nuget-pr-comment.txt >>$GITHUB_STEP_SUMMARY

    - uses: marocchino/sticky-pull-request-comment@v2
      if: success() || failure()
      with:
        GITHUB_TOKEN: ${{ github.token }}
        header: nuget-${{ inputs.project-path }}
        path: ${{ inputs.project-path }}-nuget-pr-comment.txt
